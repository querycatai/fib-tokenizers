{
    "model": "Rostlab/prot_bert",
    "tokenizer_class": "BertTokenizer",
    "likes": 57,
    "special_tokens": [
        "[UNK]",
        "[SEP]",
        "[PAD]",
        "[CLS]",
        "[MASK]"
    ],
    "datasets": [
        {
            "input": "hello world",
            "ids": [
                2,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "Hello World",
            "ids": [
                2,
                22,
                1,
                24,
                1,
                3
            ],
            "tokens": [
                "H",
                "[UNK]",
                "W",
                "[UNK]"
            ],
            "decoded": "H W"
        },
        {
            "input": "How are you doing?",
            "ids": [
                2,
                22,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "H",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "H"
        },
        {
            "input": "You should've done this",
            "ids": [
                2,
                20,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "Y",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "Y"
        },
        {
            "input": "A\n'll !!to?'d''d of, can't.",
            "ids": [
                2,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "A"
        },
        {
            "input": "def main():\n\tpass",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "This\n\nis\na\ntest.",
            "ids": [
                2,
                15,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "T"
        },
        {
            "input": "let a = obj.toString();\ntoString();",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "Hi  Hello",
            "ids": [
                2,
                22,
                1,
                22,
                1,
                3
            ],
            "tokens": [
                "H",
                "[UNK]",
                "H",
                "[UNK]"
            ],
            "decoded": "H H"
        },
        {
            "input": "trailing space   ",
            "ids": [
                2,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "   leading space",
            "ids": [
                2,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "生活的真谛是",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "The company was founded in 2016.",
            "ids": [
                2,
                15,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "T"
        },
        {
            "input": "test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test",
            "ids": [
                2,
                1,
                1,
                1,
                13,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "R",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "R"
        },
        {
            "input": "I bought an apple for $1.00 at the store.",
            "ids": [
                2,
                11,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "I",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "I"
        },
        {
            "input": "you…  ",
            "ids": [
                2,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "you…  ",
            "ids": [
                2,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "you…  you…  ",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "▁This ▁is ▁a ▁test ▁.",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "weird ～ edge ～ case",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "<s>\n",
            "ids": [
                2,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": " </s> test </s> ",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "</s>test</s>",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "grabbed",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": " grabbed",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "           grabbed",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "\n",
            "ids": [
                2,
                3
            ],
            "tokens": [],
            "decoded": ""
        },
        {
            "input": " \n",
            "ids": [
                2,
                3
            ],
            "tokens": [],
            "decoded": ""
        },
        {
            "input": "\ttabs\t\t\t\tout here",
            "ids": [
                2,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "\n\t\n",
            "ids": [
                2,
                3
            ],
            "tokens": [],
            "decoded": ""
        },
        {
            "input": "ax\n####\nboo",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "镇",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "🦙",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "🦙Ꙋ",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "Ꙋ🦙",
            "ids": [
                2,
                1,
                3
            ],
            "tokens": [
                "[UNK]"
            ],
            "decoded": ""
        },
        {
            "input": "The llama (/ˈlɑːmə/; 🦙Spanish pronunciation: [ˈʎama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000Ꙋ🦙 alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]",
            "ids": [
                2,
                15,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                5,
                1,
                1,
                1,
                1,
                1,
                1,
                10,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                6,
                1,
                1,
                1,
                1,
                16,
                1,
                1,
                23,
                1,
                1,
                1,
                5,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                15,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                5,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                24,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                15,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                9,
                1,
                1,
                1,
                1,
                16,
                1,
                1,
                1,
                1,
                1,
                15,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                7,
                1,
                16,
                1,
                1,
                17,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                10,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                7,
                1,
                6,
                1,
                11,
                1,
                1,
                27,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                17,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                10,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                26,
                1,
                10,
                1,
                1,
                23,
                1,
                1,
                1,
                1,
                1,
                11,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                15,
                1,
                22,
                1,
                5,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                6,
                1,
                1,
                6,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ],
            "tokens": [
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "L",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "S",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "P",
                "[UNK]",
                "[UNK]",
                "C",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "L",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "L",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "W",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "E",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "P",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "T",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "G",
                "[UNK]",
                "P",
                "[UNK]",
                "[UNK]",
                "N",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "S",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "G",
                "[UNK]",
                "A",
                "[UNK]",
                "I",
                "[UNK]",
                "[UNK]",
                "B",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "N",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "S",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "U",
                "[UNK]",
                "S",
                "[UNK]",
                "[UNK]",
                "C",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "I",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "T",
                "[UNK]",
                "H",
                "[UNK]",
                "L",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "A",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]"
            ],
            "decoded": "T L S A A P C L T L W T E P T G P N A S A G A I B N A A S A U S C I A T H L A A"
        },
        {
            "input": "<s></s><unk><pad>[UNK][SEP][PAD][CLS][MASK]",
            "ids": [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                0,
                2,
                4,
                3
            ],
            "tokens": [
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[UNK]",
                "[SEP]",
                "[PAD]",
                "[CLS]",
                "[MASK]"
            ],
            "decoded": ""
        }
    ],
    "pair_encode": {
        "input_ids": [
            2,
            1,
            1,
            3,
            1,
            1,
            1,
            1,
            3
        ],
        "token_type_ids": [
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1
        ],
        "attention_mask": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ]
    },
    "batch_encode": {
        "input_ids": [
            [
                2,
                1,
                1,
                3,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3
            ]
        ],
        "token_type_ids": [
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        ],
        "attention_mask": [
            [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        ]
    }
}